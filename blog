#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'
require 'rubygems'
require 'haml'

class BlogContext
  def highlight(language, file)
    preserve `pygmentize -l#{language} -fhtml #{file}`
  end

  def example(language, file)
    highlight(language, "examples/#{file}")
  end
end

layout = Haml::Engine.new(File.read("entries/layout.html.haml"))

Dir["entries/*/*/*/*.html.haml", "entries/index.html.haml", "entries/feed.rss.haml"].each do |entry|
  path = Pathname(entry)
  relative_path = path.relative_path_from(Pathname("entries"))
  public_path = Pathname("public") + relative_path.parent + path.basename.sub(/\.haml$/, '')

  FileUtils.mkdir_p(public_path.dirname)

  File.open(public_path, "w") do |file|
    context = BlogContext.new
    content = ""

    Dir.chdir(path.dirname) do
      content = Haml::Engine.new(File.read(path.basename)).render(context)
    end

    puts "Writing: #{public_path.relative_path_from(Pathname("public"))}"
    file.write public_path.extname == ".html" ? layout.render(context, :content => content) : content
  end
end
